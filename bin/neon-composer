#!/usr/bin/env php
<?php
use Nette\Neon\Neon;

$package_dir = realpath(realpath(__DIR__).'/..');
require_once($package_dir.'/share/daniels-scripts/php/vendor/autoload.php');

if (isset($argv[1]) && $argv[1] === 'create-neon') {
    if (!file_exists('composer.json')) {
        echo "composer.json not found.\n";
        exit(1);
    }

    if (!is_readable('composer.json')) {
        echo "composer.json not readable.\n";
        exit(1);
    }

    if (file_exists('composer.neon')) {
        echo "composer.neon already exists.\n";
        exit(1);
    }

    $settings = json_decode(file_get_contents('composer.json'));
    if (is_null($settings)) {
        echo "JSON error in composer.json.\n";
        exit(1);
    }

    file_put_contents('composer.neon', Neon::encode($settings, Neon::BLOCK));
    exit(0);
}

if (is_readable('composer.neon')) {
    echo "Converting neon file.\n";
    file_put_contents('composer.json',
        json_encode(
            Neon::decode(file_get_contents('composer.neon')),
            JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES
        )."\n"
    );
}
else if (is_readable('composer.json')) {
    echo "Using json file.\n";
}
else {
    echo "No composer.json or composer.neon found.\n";
    exit(1);
}

if (count($argv) > 1) {
    if (function_exists('pcntl_exec') && is_executable('/usr/bin/env')) {
        $args = $argv;
        $args[0] = 'composer';
        pcntl_exec('/usr/bin/env', $args);
        echo "Error running composer.\n";
        exit(1);
    }
    else {
       $args = array_slice($argv, 1);
        system('composer '.implode(' ', array_map('escapeshellarg', $args)), $return_val);
        exit($return_val);
    }
}
